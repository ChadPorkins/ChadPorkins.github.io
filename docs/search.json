[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GIT Seminar",
    "section": "",
    "text": "Jakob Alderson’s seminar work In Geographic Information Technologies, In the Department of Environmental, Geoinformatic and Urban Planning Sciences in Ben Gurion University of the Negev."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "GIT Seminar",
    "section": "Education",
    "text": "Education\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "GIT Seminar",
    "section": "Experience",
    "text": "Experience\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018"
  },
  {
    "objectID": "index.html#title",
    "href": "index.html#title",
    "title": "GIT Seminar",
    "section": "Title",
    "text": "Title\n“SpatioTemporal Analysis of Summer Land Surface Temperature in New York City’s Synthetic Turf Fields (2013-2022): Integrating Landsat 8 and Weather Station Data, Empowered by Machine Learning Techniques”\nSubtitle (if applicable)"
  },
  {
    "objectID": "index.html#author",
    "href": "index.html#author",
    "title": "GIT Seminar",
    "section": "Author",
    "text": "Author\nJacob Alderson’s seminar Work In Geographic Information Technologies.\nMaster of Arts (or Science) in Your Program\nYour University Name"
  },
  {
    "objectID": "index.html#date",
    "href": "index.html#date",
    "title": "GIT Seminar",
    "section": "Date",
    "text": "Date\nMonth Year"
  },
  {
    "objectID": "index.html#supervised-by",
    "href": "index.html#supervised-by",
    "title": "GIT Seminar",
    "section": "Supervised by",
    "text": "Supervised by\nProfessor Itai Kloog.\nHead of the Geoinformatics Department at Ben Gurion University of the Negev."
  },
  {
    "objectID": "index.html#word-count",
    "href": "index.html#word-count",
    "title": "GIT Seminar",
    "section": "Word Count",
    "text": "Word Count\nXXXX (optional)"
  },
  {
    "objectID": "index.html#acknowledgments-optional",
    "href": "index.html#acknowledgments-optional",
    "title": "GIT Seminar",
    "section": "Acknowledgments (optional)",
    "text": "Acknowledgments (optional)\nYou can include your acknowledgments here."
  },
  {
    "objectID": "index.html#git-seminar",
    "href": "index.html#git-seminar",
    "title": "GIT Seminar",
    "section": "GIT Seminar",
    "text": "GIT Seminar\nJacob Alderson’s seminar Work In Geographic Information Technologies, In the Department of Environmental Sciences, Geoinformatics and Urban Planning in Ben Gurion University of the Negev."
  },
  {
    "objectID": "index.html#spatiotemporal-analysis-of-summer-land-surface-temperature-in-new-york-citys-synthetic-turf-fields-2013-2022-integrating-landsat-8-and-weather-station-data-empowered-by-machine-learning-techniques.-1",
    "href": "index.html#spatiotemporal-analysis-of-summer-land-surface-temperature-in-new-york-citys-synthetic-turf-fields-2013-2022-integrating-landsat-8-and-weather-station-data-empowered-by-machine-learning-techniques.-1",
    "title": "GIT Seminar",
    "section": "SpatioTemporal Analysis of Summer Land Surface Temperature in New York City’s Synthetic Turf Fields (2013-2022): Integrating Landsat 8 and Weather Station Data, Empowered by Machine Learning Techniques.",
    "text": "SpatioTemporal Analysis of Summer Land Surface Temperature in New York City’s Synthetic Turf Fields (2013-2022): Integrating Landsat 8 and Weather Station Data, Empowered by Machine Learning Techniques."
  },
  {
    "objectID": "index.html#acknowledgments",
    "href": "index.html#acknowledgments",
    "title": "GIT Seminar",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nI thank Professor Itai Kloog and ScD, MSc, Homero Harari from the Icahn School of Medicine at Mount Sinai, who gave me the privilege and the honor to work with them this year in academic research and guided me in my first steps in the academic world."
  },
  {
    "objectID": "Introduction.html",
    "href": "Introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "The research question of this seminar is: What is the effect of climate factors on the Land Surface Temperature of synthetic turf fields during the summer months?\nThis seminar research hypothesizes that climate factors will have a significant effect on the Land Surface Temperature of synthetic turf fields during the summer months, and the significant climate factors can be used to build a prediction model of future Land Surface Temperature of synthetic turf fields during the summer months."
  },
  {
    "objectID": "Turf_Fields_Data.html",
    "href": "Turf_Fields_Data.html",
    "title": "Turf Fields Data",
    "section": "",
    "text": "nyc1 = read.csv(\"New York Turf Fields 1.csv\")\nhead(nyc1)\n\n                   Location ID\n1           Bronx Park East  1\n2               Haffen Park  2\n3 John Mullaly Park (North)  3\n4 John Mullaly Park (South)  4\n5          Marble Hill Park  5\n6           Pelham Bay Park  6\n\n\nUsing Google Earth, longitude and latitude coordinates were added to each artificial turf grass field, as seen in the following table.\n\nnyc2 = read.csv(\"New York Turf Fields 2.csv\")\nhead(nyc2)\n\n                   Location Latitude Longitude ID\n1           Bronx Park East 40.85862 -73.87169  1\n2               Haffen Park 40.87307 -73.83959  2\n3 John Mullaly Park (North) 40.83388 -73.92410  3\n4 John Mullaly Park (South) 40.83326 -73.92445  4\n5          Marble Hill Park 40.87735 -73.90828  5\n6           Pelham Bay Park 40.87006 -73.79119  6\n\n\nTo visualize the data, a map of the different artificial turf grass fields across New York.\n\nlibrary(leaflet)\nlibrary(dplyr)\n\n# Create a leaflet map\nleaflet(data = nyc2) |>\n  addTiles() |>\n  addMarkers(\n    ~Longitude, ~Latitude,\n    popup = ~paste(\"Location: \", Location, \"<br>ID: \", ID)\n  )"
  },
  {
    "objectID": "Bibliography.html",
    "href": "Bibliography.html",
    "title": "",
    "section": "",
    "text": "Landsat Missions. (2023, July 21). Landsat 8-9 OLI/TIRS Collection 2 Level 2 Data Format Control Book. USGS. Retrieved September 15, 2023, from https://www.usgs.gov/media/files/landsat-8-9-olitirs-collection-2-level-2-data-format-control-book\nFacebook Open Source. (n.d.). Prophet. Prophet. Retrieved September 1, 2023, from https://facebook.github.io/prophet/\nTaylor, S. J., & Letham, B. (2018). Forecasting at scale. The American Statistician, 72(1), 37-45.‏\nBoehmke. (n.d.). Random Forests. University of Cincinnati Business Analytics R Programming Guide. https://uc-r.github.io/random_forests\nBox, G. E. (1976). Science and statistics. Journal of the American Statistical Association, 71(356), 791-799.‏\nUSGS. (n.d.). Landsat 8. https://www.usgs.gov/landsat-missions/landsat-8\nWang, T., Shi, J., Ma, Y., Husi, L., Comyn‐Platt, E., Ji, D., ... & Xiong, C. (2019). Recovering land surface temperature under cloudy skies considering the solar‐cloud‐satellite geometry: Application to MODIS and Landsat‐8 data. Journal of Geophysical Research: Atmospheres, 124(6), 3401-3416.‏\ndata sources:\nNew York City Department of Parks & Recreation. (n.d.). Synthetic Turf Lead Results. Wayback Machine. web.archive.org/web/20180203033627/https://www.nycgovparks.org/news/reports/synthetic-turf-tests\nNational Centers for Environmental Information. (n.d.). Global historical climatology network daily (GHCNd). https://www.ncei.noaa.gov/products/land-based-station/global-historical-climatology-network-daily\nEarth Engine Data Catalog. (n.d.). USGS Landsat 8 level 2, collection 2, tier 1. https://developers.google.com/earth-engine/datasets/catalog/LANDSAT_LC08_C02_T1_L2\nNational Weather Service. (n.d.). Climate. https://www.weather.gov/wrh/Climate?wfo=okx"
  },
  {
    "objectID": "Stations_Data.html",
    "href": "Stations_Data.html",
    "title": "Weather stations data",
    "section": "",
    "text": "The Global Historical Climatology Network Daily (GHCNd) is an online database of daily climate summaries from land surface monitoring stations worldwide. The database contains records from over 100,000 stations in 180 countries and territories, containing temperature, precipitation, snowfall, and snow depth data. (National Centers for Environmental Information. (n.d.))\nTwo databases were utilized containing the following data:\n\nStations: Station ID, latitude, longitude, elevation, State (if applicable), and Station name.\nInventory: Station ID, latitude, longitude, element type, and begin/end date.\n\nAfter downloading data from the GHCNd website, it was converted from text to CSV format while selecting relevant columns.\n\nlibrary(dplyr)\n\ndata_stations = read.table(\"ncei.noaa.gov_pub_data_ghcn_daily_ghcnd-stations.txt\", header = FALSE, fill = TRUE, stringsAsFactors = FALSE)\n\nstation_data = data_stations |>\n  select(V1, V2, V3) |>\n  setNames(c(\"Station_ID\", \"Latitude\", \"Longitude\")) |>\n  as.data.frame()\n\nstation_data |>\n  write.csv(\"station_data.csv\", row.names = FALSE)\n\n\nlibrary(dplyr)\n\ndata_inventory = read.table(\"ncei.noaa.gov_pub_data_ghcn_daily_ghcnd-inventory.txt\", stringsAsFactors = FALSE)\n\ninventory_data = data_inventory |>\n  select(V1, V2, V3, V4, V5, V6) |>\n  setNames(c(\"Station_ID\", \"Latitude\", \"Longitude\", \"Data_Type\", \"Start_Year\", \"End_Year\")) |>\n  as.data.frame()\n\ninventory_data |>\n  write.csv(\"Inventory_data.csv\", row.names = FALSE)\n\nIn order to classify and filter relevant weather stations, the two databases were utilized. It was important to select stations with temperature-averaged data, as the Landsat 8 LST values were extracted for each summer month’s average values. Additionally, the selected stations had to collect data during summers from 2013 to 2022 and existed in 2013 when the Landsat 8 satellite was launched into space.\n\nlibrary(dplyr)\n\ninventory_data = read.csv(\"Inventory_Data.csv\", stringsAsFactors = FALSE)\nstation_data = read.csv(\"station_data.csv\", stringsAsFactors = FALSE)\n\nstations_with_data_in_2023 = inventory_data |>\n  filter(Data_Type == \"TAVG\") |>\n  inner_join(station_data, by = \"Station_ID\") |>\n  mutate(Start_Year = as.numeric(Start_Year), End_Year = as.numeric(End_Year)) |>\n  filter(End_Year >= 2023, Start_Year < 2013)\n\nstations_with_data_in_2023 |>\nwrite.csv(\"stations_with_data_in_2023.csv\", row.names = FALSE)\n\nFinally, the data frame containing all the necessary data.\n\nstations_with_data_in_2023 = read.csv(\"stations_with_data_in_2023.csv\")\nglimpse(stations_with_data_in_2023)\n\nRows: 4,425\nColumns: 8\n$ Station_ID  <chr> \"AE000041196\", \"AEM00041194\", \"AEM00041217\", \"AEM00041218\"…\n$ Latitude.x  <dbl> 25.3330, 25.2550, 24.4330, 24.2620, 36.7167, 30.5667, 28.0…\n$ Longitude.x <dbl> 55.5170, 55.3640, 54.6510, 55.6090, 3.2500, 2.8667, 9.6331…\n$ Data_Type   <chr> \"TAVG\", \"TAVG\", \"TAVG\", \"TAVG\", \"TAVG\", \"TAVG\", \"TAVG\", \"T…\n$ Start_Year  <int> 1944, 1983, 1983, 1994, 1943, 1957, 1965, 1995, 1995, 1943…\n$ End_Year    <int> 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023…\n$ Latitude.y  <dbl> 25.3330, 25.2550, 24.4330, 24.2620, 36.7167, 30.5667, 28.0…\n$ Longitude.y <dbl> 55.5170, 55.3640, 54.6510, 55.6090, 3.2500, 2.8667, 9.6331…"
  },
  {
    "objectID": "Landsat8.html",
    "href": "Landsat8.html",
    "title": "Retrieving and extracting Land Surface Temperature (LST) values from Landsat 8 satellite",
    "section": "",
    "text": "In order to obtain the Land Surface Temperatures (LST) using Google Earth Engine, a polygon layer named NEMIA, which encompasses the eastern coast of North America, was employed. Additionally, the synthetic fields table, including its corresponding coordinates, was converted into a point layer using ArcGIS Pro.\nFirst, the code adds layers to the map representing NEMIA (in red) and Fields (in green). It then centers the view on NEMIA and retrieves Landsat 8 imagery for the date range specified in the code within the NEMIA boundaries. To ensure the accuracy of data and eliminate cloud and shadow effects from Landsat imagery, a cloud masking function (masking) is introduced. This step is crucial in generating reliable temperature data, as clouds significantly affect remotely sensed LST by absorbing almost all surface-emitted thermal energy. Due to cloud contamination, most LST products derived from various algorithms have spatial discontinuities, as highlighted by Wang et al. (2019) in their research. To identify clouds, cloud shadows, and cirrus clouds in Landsat imagery, the cloud masking function uses the bit value assigned from the QA band. Specifically, if the bit values of 4, 3, and 2 from the Landsat 8 imagery correspond to these cloud types, the function switches the pixel to NA. (Landsat Missions,2023)\nNext, the code calculates a cloud-free mean composite image using Landsat data and clips it to the NEMIA boundaries. Scaling factors are then applied to the optical and thermal bands to improve data quality and make it suitable for temperature analysis based on remote sensing physics principles (Earth Engine Data Catalog. (n.d.)). The land surface temperature (LST) is obtained from the thermal band of the Landsat imagery and converted into degrees Celsius. It is then displayed as a color-coded layer (LST1) on the map, visually representing the LST distribution.\nTo enhance the focus on synthetic grass and minimize the impact of the surrounding urban environment, the resolution for temperature data is set to 30 meters before projecting LST data. LST values are extracted from the reprojected data for each field. Finally, extracted LST data is exported as a CSV file.\nIt is important to note that the provided code example is only applicable to August 2018. However, for seminar research purposes, it was applied from June to August, spanning from 2013 to 2022.\n\n\n// The shape files need to be uploaded to Google Earth Engine.\nvar NEMIA = NEMIA Shape File\nvar Fields = Fields Shape File\n\nMap.addLayer(NEMIA, { color: 'red' });\nMap.centerObject(NEMIA, 4);\nMap.addLayer(Fields, { color: 'green' }, 'Fields');\n\nvar landsat8 = ee.ImageCollection(\"LANDSAT/LC08/C02/T1_L2\");\nvar landsat8Filtered = landsat8.filterBounds(NEMIA);\nvar landsat8DateFiltered = landsat8Filtered.filterDate('2018-06-01', '2018-06-30');\n\n// Cloud masking function\nvar masking = function (img) {\n  var cloudshadowBitmask = (1 << 4);\n  var cloudshadowmask = (1 << 3);\n  var cirus = (1 << 2);\n  var qa = img.select('QA_PIXEL');\n  var maskshadow = qa.bitwiseAnd(cloudshadowBitmask).eq(0);\n  var maskcloud = qa.bitwiseAnd(cloudshadowmask).eq(0);\n  var maskValue2 = qa.bitwiseAnd(cirus).eq(0); // Add bit mask for value 2\n  var mask = maskshadow.and(maskcloud).and(maskValue2); // Include new mask\n  return img.updateMask(mask);\n};\n\nvar cloudFreeImage = landsat8DateFiltered.sort('CLOUD_COVER_LAND')\n  .map(masking)\n  .mean();\n\nvar clippedImage = cloudFreeImage.clip(NEMIA);\n\n// Apply scaling factors\nvar scale = function applyScaleFactors(image) {\n  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2);\n  var thermalBands = image.select('ST_B.*').multiply(0.00341802).add(149.0);\n  return image.addBands(opticalBands, null, true)\n    .addBands(thermalBands, null, true);\n};\n\nvar scaledImage = scale(clippedImage);\n\nMap.addLayer(scaledImage);\n\nvar thermalBand = scaledImage.select('ST_B10');\nvar LSTcelcius = thermalBand.subtract(273.15);\nvar LST_Color = { min: 0, max: 30, palette: ['blue', 'limegreen', 'yellow', 'orange'] };\nMap.addLayer(LSTcelcius, LST_Color, 'LST1');\n\n// Set the desired resolution to 30 meters\nvar desiredResolution = 30;\n\n// Reproject LSTcelcius to the desired resolution\nvar LSTcelcius30m = LSTcelcius.reproject({\n  crs: LSTcelcius.projection().crs(),\n  scale: desiredResolution,\n});\n\n// Extract values from LSTcelcius raster to points\nvar extractedDataFields = LSTcelcius30m.reduceRegions({\n  collection: Fields,\n  reducer: ee.Reducer.first(),\n  scale: desiredResolution,\n});\n\n// Export the extracted data to a CSV file\nExport.table.toDrive({\n  collection: extractedDataFields,\n  description: 'Points_Fields_June_2018',\n  folder: 'L8_Points_Fields_Seminar',\n  fileFormat: 'CSV',\n});\n\n\n\n\nFigure 1. NEMIA layer with LST values from the code in June 2018."
  },
  {
    "objectID": "Stations_Data_Spatial_Join.html",
    "href": "Stations_Data_Spatial_Join.html",
    "title": "Weather stations Spatial Join",
    "section": "",
    "text": "Figure 2 shows green circles for the artificial turf grass field and red triangles for the weather stations.\n\n\nFinally, a data table was created that includes all artificial turf grass fields, the nearest weather station, and the distance between them.\n\nSpatial_Join =  read.csv(\"Spatial_Join.csv\")\nhead(Spatial_Join)\n\n  ID Latitude Longitude       Dist  Station_ID\n1  1 40.85862 -73.87169 0.07968540 USW00014732\n2  2 40.87307 -73.83959 0.10213630 USW00014732\n3  3 40.83388 -73.92410 0.06990400 USW00014732\n4  4 40.83326 -73.92445 0.06964582 USW00014732\n5  5 40.87735 -73.90828 0.10187164 USW00014732\n6  6 40.87006 -73.79119 0.12711889 USW00014732"
  },
  {
    "objectID": "Weather_Data.html",
    "href": "Weather_Data.html",
    "title": "Weather Data",
    "section": "",
    "text": "ID Latitude Longitude       Dist  Station_ID\n1  1 40.85862 -73.87169 0.07968540 USW00014732\n2  2 40.87307 -73.83959 0.10213630 USW00014732\n3  3 40.83388 -73.92410 0.06990400 USW00014732\n4  4 40.83326 -73.92445 0.06964582 USW00014732\n5  5 40.87735 -73.90828 0.10187164 USW00014732\n6  6 40.87006 -73.79119 0.12711889 USW00014732\n\n\n\ntable(Spatial_Join$Station_ID)\n\n\nUSW00014732 USW00014734 USW00094789 \n         81          11           6 \n\n\nThe National Weather Service website was utilized to gather climatic data for these stations. The findings revealed that the following three stations are:\n\nLAGUARDIA AIRPORT, NY US.\nNEWARK LIBERTY INTERNATIONAL AIRPORT, NJ US.\nJFK INTERNATIONAL AIRPORT, NY US.\n\nOne data frame was created to collect the following climate data in Fahrenheit and Celsius for each weather station from the National Weather Service website:\n\nMonthly Mean Max Temperature.\nMonthly Mean Min Temperature.\nMonthly Mean Avg.\nMonthly Total Precipitation.\n\n\nlibrary(dplyr)\nWeather_Data = read.csv(\"Weather_Data.csv\")\nglimpse(Weather_Data)\n\nRows: 90\nColumns: 9\n$ Station_ID    <chr> \"USW00014732\", \"USW00014732\", \"USW00014732\", \"USW0001473…\n$ Date          <chr> \"Jun-13\", \"Jul-13\", \"Aug-13\", \"Jun-14\", \"Jul-14\", \"Aug-1…\n$ Max.Temp      <dbl> 81.7, 87.8, 82.1, 80.0, 84.3, 82.1, 78.4, 85.9, 86.4, 81…\n$ Min.Temp      <dbl> 66.4, 74.5, 69.4, 65.0, 69.6, 68.2, 64.1, 72.5, 72.3, 65…\n$ Avg.Temp      <dbl> 74.0, 81.2, 75.8, 72.5, 77.0, 75.1, 71.3, 79.2, 79.3, 73…\n$ Precipitation <dbl> 8.16, 2.80, 1.97, 3.69, 3.99, 3.50, 4.80, 3.54, 1.88, 2.…\n$ Max.Temp.C    <dbl> 27.61111, 31.00000, 27.83333, 26.66667, 29.05556, 27.833…\n$ Min.Temp.C    <dbl> 19.11111, 23.61111, 20.77778, 18.33333, 20.88889, 20.111…\n$ Avg.Temp.C    <dbl> 23.33333, 27.33333, 24.33333, 22.50000, 25.00000, 23.944…"
  },
  {
    "objectID": "Data_Integration_and_Selection.html",
    "href": "Data_Integration_and_Selection.html",
    "title": "Data Integration, Selection, and NA Value Handling",
    "section": "",
    "text": "It is important to ensure that the centralized table only includes the necessary columns and has no missing LST values due to clouds, as they are irrelevant. In addition, the date column needs to be in a proper date format instead of a character format. This is useful because it enables the performance of time-based data analysis. Adding the first of the month to each date allows the date column to have a date class. It is worth noting that this procedure does not affect statistical and spatial conclusions.\n\nlibrary(dplyr)\n\nSpatial_Join = read.csv(\"Spatial_Join.csv\")\nWeather_Data = read.csv(\"Weather_Data.csv\")\n\nfolder_path = 'L8/All/'\ncsv_files = list.files(path = folder_path, pattern = \"*.csv\", full.names = TRUE)\n\ncombined_data = csv_files |>\n  lapply(read.csv) |>\n  bind_rows()\n\nfinal_data = combined_data |>\n  left_join(Spatial_Join, by = \"ID\") |>\n  left_join(Weather_Data, by = c(\"Station_ID\", \"Date\")) |>\n  select(ID, Lst = first, Date, Precipitation, Max.Temp.C, Min.Temp.C, Avg.Temp.C) |>\n  mutate(Date = as.Date(paste(\"01\", Date), format = \"%d %b-%y\")) |>\n  mutate(Month = format(Date, \"%m\")) |>\n  mutate(Year = format(Date, \"%Y\")) |>\n  arrange(Date) |>\n  filter(!is.na(Lst))\n\nglimpse(final_data)\n\nRows: 2,737\nColumns: 9\n$ ID            <int> 2, 47, 75, 33, 17, 69, 92, 84, 50, 16, 35, 81, 82, 12, 5…\n$ Lst           <dbl> 43.12277, 37.72914, 43.83201, 34.40853, 38.75967, 40.277…\n$ Date          <date> 2013-06-01, 2013-06-01, 2013-06-01, 2013-06-01, 2013-06…\n$ Precipitation <dbl> 8.16, 8.16, 8.16, 8.74, 8.74, 8.16, 7.95, 7.95, 8.16, 8.…\n$ Max.Temp.C    <dbl> 27.61111, 27.61111, 27.61111, 27.77778, 27.77778, 27.611…\n$ Min.Temp.C    <dbl> 19.11111, 19.11111, 19.11111, 18.11111, 18.11111, 19.111…\n$ Avg.Temp.C    <dbl> 23.33333, 23.33333, 23.33333, 22.94444, 22.94444, 23.333…\n$ Month         <chr> \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"0…\n$ Year          <chr> \"2013\", \"2013\", \"2013\", \"2013\", \"2013\", \"2013\", \"2013\", …"
  },
  {
    "objectID": "Data_Cleaning.html",
    "href": "Data_Cleaning.html",
    "title": "Data preprocessing and summarization",
    "section": "",
    "text": "library(tidyverse)\n\n\nggplot(final_data, aes(x = Lst)) +\n  geom_histogram(binwidth = 0.5, fill = \"#006400\", color = \"black\") +\n  geom_density(aes(y = ..count.. * 0.5), color = \"blue\", size = 1) +  \nlabs(x = \"LST\", y = \"Frequency\", title = \"Histogram and Density of LST\") +\n  theme_minimal() +\n  theme(plot.title = element_text(size = 20, face = \"bold\"),\n        axis.title = element_text(size = 14),\n        axis.text = element_text(size = 14))\n\n\n\n\nIn order to account for factors like the urban landscape of New York that can impact Land Surface Temperature (LST), it was decided to employ a method of averaging LST values for each field every month during the summer months spanning from 2013 to 2022. Through this process, it is expected to achieve higher data accuracy. This improved dataset will facilitate more accurate statistical analyses and allow for more meaningful insights from the collected data.\n\nlibrary(dplyr)\nsummer_data <- final_data %>%\n  filter(Lst>20) %>%\n  group_by(Date, Year, Month ) %>%\n  summarise_all(.funs = mean, na.rm = TRUE)  %>%\n  ungroup()\n\nglimpse(summer_data)\n\nRows: 30\nColumns: 8\n$ Date          <chr> \"2013-06-01\", \"2013-07-01\", \"2013-08-01\", \"2014-06-01\", …\n$ Year          <int> 2013, 2013, 2013, 2014, 2014, 2014, 2015, 2015, 2015, 20…\n$ Month         <int> 6, 7, 8, 6, 7, 8, 6, 7, 8, 6, 7, 8, 6, 7, 8, 6, 7, 8, 6,…\n$ Lst           <dbl> 42.28527, 43.00233, 39.00369, 40.40266, 41.68047, 36.257…\n$ Precipitation <dbl> 8.212245, 2.893056, 2.308367, 3.704694, 4.166020, 3.3493…\n$ Max.Temp.C    <dbl> 27.49376, 31.01157, 27.84977, 26.77098, 29.10374, 27.884…\n$ Min.Temp.C    <dbl> 18.88662, 23.42978, 20.53231, 18.21145, 20.74490, 19.897…\n$ Avg.Temp.C    <dbl> 23.16723, 27.24460, 24.21712, 22.48810, 24.94898, 23.873…"
  },
  {
    "objectID": "Data_Visualisation.html",
    "href": "Data_Visualisation.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Data visualization is essential for processing and drawing conclusions on the land surface data (LST) dataset throughout the years and the summer months.\nThis code generates box plots visually representing the Land Surface Temperature (LST) data from 2013 to 2022. Box plots are statistical plots that help in understanding the distribution of data. The box plots in this code identify patterns and LST changes over the given period.\nUpon examining the box plots, it was discovered that the Land Surface Temperature (LST) values during 2017, 2018, 2019, and 2021 were lower than the overall median value of LST. This indicates that the land surface temperature was lower during these years compared to the overall dataset. In contrast, LST values from 2013 to 2016 and 2020 to 2022 were higher than the median LST value. Therefore, it is evident that there is a distinct divergence in LST patterns throughout this time frame.\nIn addition to the previously observed temporal patterns, it is noteworthy that certain years, specifically 2015 and 2020, exhibit a notably wide range of temperatures. This stands in stark contrast to the characteristics of other years, such as 2013, 2017, and 2021, which demonstrate a conspicuously narrow temperature range.\n\nlibrary(ggplot2)\nlibrary(ggpubr)\n\nmedian_lst = median(summer_data$Lst)\n\nggplot(summer_data, aes(x = factor(Year), y = Lst, fill = factor(Year))) +\n  geom_boxplot(outlier.shape = NA, width = 0.6, color = \"gray30\", alpha = 0.7) +\n  geom_point(position = position_jitterdodge(jitter.width = 0.15), aes(color = factor(Year)), size = 3, alpha = 0.6) +\n  geom_hline(yintercept = median_lst, color = \"red\", linetype = \"solid\", size = 1) + \n  labs(title = \"Distribution of Land Surface Temperature Over Years\",\n       x = \"Year\",\n       y = \"Lst\") +\n  theme_pubr() +\n  scale_fill_viridis_d(option = \"C\") +\n  coord_cartesian(ylim = quantile(summer_data$Lst, c(0.05, 0.95))) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),\n        panel.grid.major.x = element_blank(),\n        legend.position = \"bottom\",  \n        legend.title = element_blank(),\n        legend.text = element_text(size = 10),\n        plot.title = element_text(size = 18, face = \"bold\"),\n        axis.title = element_text(size = 14),\n        axis.text = element_text(size = 12))\n\n\n\n\n\nThe Land Surface Temperature (LST) variations across summer months from 2013 to 2022 are visualized in a heatmap with corresponding LST values indicated by a color gradient.\nThe months of August and July have the lowest LST values, which can be attributed to their temporal alignment with the beginning and end of the summer season. July is the hottest month in the dataset, with the highest LST values.\nIn June 2015, the temperature was exceptionally low, with a minimum LST of 28.5 degrees Celsius. In contrast, July 2020 was the hottest month, with a temperature of 46.5 degrees Celsius, almost 1.6 times higher than the lowest temperature recorded in June 2015. This significant temperature difference highlights the dynamic nature of LST patterns.\n\nmy_color_scale = scale_fill_gradientn(colors = viridis::viridis(10), \n                                       name = \"Lst\", \n                                       breaks = seq(25, 55, by = 5))\n\nggplot(summer_data, aes(x = Year, y = Month, fill = Lst)) +\n  geom_tile(color = \"white\") +\n  geom_text(aes(label = round(Lst, 1)), color = \"black\", size = 3) +\n  labs(title = \"Heat Map of Land Surface Temperature Over Months and Years\",\n       x = \"Year\",\n       y = \"Month\") +\n  my_color_scale +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1),\n        axis.text.y = element_text(hjust = 1, vjust = 0.5),\n        legend.position = \"right\",\n        plot.title = element_text(size = 18, face = \"bold\"),\n        axis.title = element_text(size = 14),\n        legend.text = element_text(size = 12))\n\n\n\n\n\nThis code generates violin plots that display the distribution of Land Surface Temperature (LST) across different months. These plots offer valuable insights into each month’s central tendency, spread, and overall shape of the LST data distribution.\nJuly stands out as the hottest month in the dataset. This is evident from its higher violin plot shape. Meanwhile, the violin plots for June and August show similar conditions, indicating that these two months share specific temperature characteristics. June and August have broader distributions, which suggest a wider spread of LST values. However, it is notable that August still has slightly higher temperatures than June, as evidenced by its higher upper end of the violin plot.\nFurthermore, the variation in the width of the violin plots is noticeable. While June and August exhibit broader distributions, July presents a narrower one. This suggests that LST values in July tend to cluster more closely around a specific temperature range, whereas June and August display more significant variability.\n\nlibrary(ggplot2)\nlibrary(ggpubr)\n\nggplot(summer_data, aes(x = factor(Month), y = Lst, fill = factor(Month))) +\n  geom_violin(trim = FALSE, scale = \"width\", alpha = 0.7) +\n  geom_jitter(position = position_jitter(0.2), color = \"gray20\", size = 0.5, alpha = 0.5) +\n  labs(title = \"Monthly Distribution of Land Surface Temperature\",\n       x = \"Month\",\n       y = \"Lst\") +\n  theme_pubr() +\n  scale_fill_viridis_d(option = \"C\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),\n        panel.grid.major.x = element_blank(),\n        legend.position = \"bottom\",\n        legend.title = element_blank(),\n        legend.text = element_text(size = 10),\n        plot.title = element_text(size = 18, face = \"bold\"),\n        axis.title = element_text(size = 14),\n        axis.text = element_text(size = 12))"
  },
  {
    "objectID": "June.html",
    "href": "June.html",
    "title": "June",
    "section": "",
    "text": "bla bla"
  },
  {
    "objectID": "Correlations.html",
    "href": "Correlations.html",
    "title": "Investigating Correlations",
    "section": "",
    "text": "In order to perform correlation tests between the LST data and data from weather stations, a Shapiro normality test needs to be conducted to determine the appropriate method for the correlation tests.\n\nlibrary(dplyr)\nshapiro_results <- summer_data %>%\nselect(Lst,Precipitation,Max.Temp.C,Min.Temp.C,Avg.Temp.C) %>%\nsummarise_all(list(p_value = ~shapiro.test(.)$p.value))\n\nglimpse(shapiro_results)\n\nRows: 1\nColumns: 5\n$ Lst_p_value           <dbl> 0.05067797\n$ Precipitation_p_value <dbl> 0.3206028\n$ Max.Temp.C_p_value    <dbl> 0.2804596\n$ Min.Temp.C_p_value    <dbl> 0.008113413\n$ Avg.Temp.C_p_value    <dbl> 0.03798488\n\n\nFrom the normality test results, it was found that the average and the minimum temperatures aren’t normally distributed. In light of that, all the correlation tests will be done with the “Kendall” method to simplify the statistical calculations.\n\nBased on the plot results interpretation, it can be concluded that there exists a low to medium significant positive correlation between the Lst and Temperature variables. On the other hand, the correlation between Lst and Precipitation is negligible and insignificant. Considering these findings alongside the normal distribution of Lst values, a standard linear model will be conducted for further analysis.\n\nlibrary(ggplot2)\nlibrary(cowplot)\n\ncreate_scatter_plot <- function(data, x_var, y_var, x_label, y_label, plot_color, header) {\n  correlation_result <- cor.test(data[[x_var]], data[[y_var]], method = \"kendall\")\n  \n  plot <- ggplot(data = data, aes(x = .data[[x_var]], y = .data[[y_var]])) +\n    geom_point(color = plot_color, fill = \"white\", size = 3) +\n    geom_smooth(method = \"lm\", se = FALSE, color = \"#d62728\", linetype = \"dashed\") +\n    geom_text(aes(label = paste(\"Corr =\", round(correlation_result$estimate, 2),\n                                \"p =\", signif(correlation_result$p.value, digits = 3))),\n              x = Inf, y = -Inf, hjust = 1, vjust = 0, color = \"#d62728\") +\n    labs(x = x_label, y = y_label, title = header) +\n    theme_minimal() +\n    theme(legend.position = \"bottom\")\n  \n  return(plot)\n}\n\n\nplot1 <- create_scatter_plot(summer_data, \"Avg.Temp.C\", \"Lst\", \"Avg Temp C\", \"LST\", \"#1f77b4\", \"Avg Temp C vs. LST\")\nplot2 <- create_scatter_plot(summer_data, \"Min.Temp.C\", \"Lst\", \"Min Temp C\", \"LST\", \"#800080\", \"Min Temp C vs. LST\")\nplot3 <- create_scatter_plot(summer_data, \"Max.Temp.C\", \"Lst\", \"Max Temp C\", \"LST\", \"#2ca02c\", \"Max Temp C vs. LST\")\nplot4 <- create_scatter_plot(summer_data, \"Precipitation\", \"Lst\", \"Precipitation\", \"LST\", \"#000000\", \"Precipitation vs. LST\")\n\ncombined_plots <- plot_grid(plot1, plot2, plot3, plot4, ncol = 2)\n\ncombined_plots"
  },
  {
    "objectID": "Regression.html",
    "href": "Regression.html",
    "title": "Regression analysis",
    "section": "",
    "text": "After obtaining the correlation results, a standard linear model will be conducted to further analyze the relationship between the Lst data and the Temperature variables. To obtain the most suitable model, the Stepwise Algorithm will be used.\n\nlibrary(stats)\nmodel = lm(Lst ~ Avg.Temp.C + Min.Temp.C + Max.Temp.C, data = summer_data)\nmodel = stats::step(model)\n\nThe investigation was conducted to determine the relationship between “Avg.Temp.C” and “Min.Temp.C,” two independent variables, and their effect on the dependent variable “LST” using the results of the Stepwise Algorithm. The model obtained a small p-value of 0.0008871, indicating its statistical significance. The model’s R-squared value of about 0.406 suggests that the variations in “Avg.Temp.C” and “Min.Temp.C” can account for 40.6% of the variance in “Lst.” However, it’s essential to note that other unmeasured factors could influence “Lst,” as there is still a notable amount of unexplained variance.\nThe coefficients for “Avg.Temp.C” and “Min.Temp.C” are statistically significant. “Avg.Temp.C” has a positive coefficient of approximately 6.555, indicating that for each one-unit increase in average temperature, “Lst” is expected to increase by about 6.555 units. Conversely, “Min.Temp.C” has a negative coefficient of approximately -5.155, indicating that for each one-unit increase in minimum temperature, “Lst” is expected to decrease by about 5.155 units.\n\nsummary(model)\n\n\nCall:\nlm(formula = Lst ~ Avg.Temp.C + Min.Temp.C, data = summer_data)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-9.386 -1.373  0.021  2.076  4.740 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)  -16.966     13.882  -1.222  0.23221   \nAvg.Temp.C     6.555      2.190   2.993  0.00585 **\nMin.Temp.C    -5.155      2.057  -2.506  0.01853 * \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.256 on 27 degrees of freedom\nMultiple R-squared:  0.4058,    Adjusted R-squared:  0.3618 \nF-statistic:  9.22 on 2 and 27 DF,  p-value: 0.0008871"
  },
  {
    "objectID": "Assumptions.html",
    "href": "Assumptions.html",
    "title": "Assumptions of Multiple Linear Regression",
    "section": "",
    "text": "The assumptions include:\n\nLinearity: There must be a linear relationship between the dependent variable and its explanatory variables.\nIndependence: The explanatory variables should not be highly correlated with each other.\nNormal distribution: The residuals should be normally distributed.\nHomoscedasticity: The residuals should have equal variance.\n\n\n\n\n\nLinearity:\nFrom the plot, it seems that there is a nearly linear line that validates the linearity assumption.\n\nplot(model,1)\n\n\n\n\n\nIndependence:\nThere is a strong correlation between the explanatory variables. In such a case, the model can be used for prediction but not for measuring the influence of the explanatory variables on LST.\n\nlibrary(Kendall)\nindependent_vars = summer_data[, c(\"Avg.Temp.C\", \"Min.Temp.C\")]\ncor_matrix = cor(as.matrix(independent_vars), method = \"kendall\")\nprint(cor_matrix)\n\n           Avg.Temp.C Min.Temp.C\nAvg.Temp.C  1.0000000  0.9034483\nMin.Temp.C  0.9034483  1.0000000\n\n\n\nNormal distribution:\nThe Shapiro test result and the QQ - Plot validate the normal distribution assumption.\n\nlibrary(car)\nqqPlot(residuals(model))\n\n\n\n\n[1] 24  7\n\nshapiro.test(residuals(model))\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(model)\nW = 0.94114, p-value = 0.09762\n\n\n\nHomoscedasticity:\nIn the Residuals vs. Fitted plot, there is some suspicion of heteroscedasticity; a sort of asymmetrical shape appears. In addition, the ncvTest shows a low P value value below 0.05; the low value means a lack of homoscedasticity. Uneven variances in samples result in biased and skewed test results.\n\nncvTest(model)\n\nNon-constant Variance Score Test \nVariance formula: ~ fitted.values \nChisquare = 4.34791, Df = 1, p = 0.037054\n\n\n\nplot(model,3)\n\n\n\n\n\nIn summary, the model meets linearity and normal distribution assumptions but violates independence and homoscedasticity assumptions. However, as George E. P. Box famously said, “All models are wrong, but some are useful.” (Box, G. E, 1976)"
  },
  {
    "objectID": "Machine.html",
    "href": "Machine.html",
    "title": "",
    "section": "",
    "text": "summer_data = read.csv(\"summer_data.csv\")\nlibrary(randomForest)\n\nWarning: package 'randomForest' was built under R version 4.2.3\n\n\nrandomForest 4.7-1.1\n\n\nType rfNews() to see new features/changes/bug fixes.\n\nlibrary(e1071)\n\nWarning: package 'e1071' was built under R version 4.2.3\n\nlibrary(xgboost)\n\nWarning: package 'xgboost' was built under R version 4.2.3\n\nlibrary(ggplot2)\n\n\nAttaching package: 'ggplot2'\n\n\nThe following object is masked from 'package:randomForest':\n\n    margin\n\n# Load your dataset (replace 'your_data' with your actual dataset)\n# Example: summer_data <- read.csv(\"your_data.csv\")\n\n# Fit a Random Forest model\nrf_model <- randomForest(Lst ~ Avg.Temp.C + Min.Temp.C, data = summer_data)\n\n# Fit a Support Vector Machine (SVM) model using the e1071 package\nsvm_model <- svm(Lst ~ Avg.Temp.C + Min.Temp.C, data = summer_data)\n\n# Fit an XGBoost model\nxgb_model <- xgboost(data = as.matrix(summer_data[, c(\"Avg.Temp.C\", \"Min.Temp.C\")]), \n                     label = summer_data$Lst, \n                     objective = \"reg:squarederror\", nrounds = 100)\n\n[1] train-rmse:27.953901 \n[2] train-rmse:20.038160 \n[3] train-rmse:14.452481 \n[4] train-rmse:10.548952 \n[5] train-rmse:7.851009 \n[6] train-rmse:5.867752 \n[7] train-rmse:4.461927 \n[8] train-rmse:3.487385 \n[9] train-rmse:2.804483 \n[10]    train-rmse:2.260476 \n[11]    train-rmse:1.868209 \n[12]    train-rmse:1.571221 \n[13]    train-rmse:1.358508 \n[14]    train-rmse:1.178783 \n[15]    train-rmse:1.012746 \n[16]    train-rmse:0.872232 \n[17]    train-rmse:0.774190 \n[18]    train-rmse:0.675167 \n[19]    train-rmse:0.609960 \n[20]    train-rmse:0.534567 \n[21]    train-rmse:0.467033 \n[22]    train-rmse:0.412710 \n[23]    train-rmse:0.371853 \n[24]    train-rmse:0.331187 \n[25]    train-rmse:0.302843 \n[26]    train-rmse:0.270692 \n[27]    train-rmse:0.240539 \n[28]    train-rmse:0.215396 \n[29]    train-rmse:0.195199 \n[30]    train-rmse:0.176390 \n[31]    train-rmse:0.156817 \n[32]    train-rmse:0.134670 \n[33]    train-rmse:0.116078 \n[34]    train-rmse:0.100507 \n[35]    train-rmse:0.087555 \n[36]    train-rmse:0.076768 \n[37]    train-rmse:0.068817 \n[38]    train-rmse:0.062695 \n[39]    train-rmse:0.057158 \n[40]    train-rmse:0.053980 \n[41]    train-rmse:0.049469 \n[42]    train-rmse:0.044766 \n[43]    train-rmse:0.041290 \n[44]    train-rmse:0.038951 \n[45]    train-rmse:0.035218 \n[46]    train-rmse:0.032298 \n[47]    train-rmse:0.029613 \n[48]    train-rmse:0.027188 \n[49]    train-rmse:0.025078 \n[50]    train-rmse:0.022451 \n[51]    train-rmse:0.020174 \n[52]    train-rmse:0.018390 \n[53]    train-rmse:0.017001 \n[54]    train-rmse:0.015288 \n[55]    train-rmse:0.013500 \n[56]    train-rmse:0.012279 \n[57]    train-rmse:0.011034 \n[58]    train-rmse:0.009757 \n[59]    train-rmse:0.008857 \n[60]    train-rmse:0.008225 \n[61]    train-rmse:0.007401 \n[62]    train-rmse:0.006708 \n[63]    train-rmse:0.006047 \n[64]    train-rmse:0.005682 \n[65]    train-rmse:0.005363 \n[66]    train-rmse:0.004845 \n[67]    train-rmse:0.004580 \n[68]    train-rmse:0.004145 \n[69]    train-rmse:0.003922 \n[70]    train-rmse:0.003555 \n[71]    train-rmse:0.003263 \n[72]    train-rmse:0.002958 \n[73]    train-rmse:0.002723 \n[74]    train-rmse:0.002484 \n[75]    train-rmse:0.002279 \n[76]    train-rmse:0.002151 \n[77]    train-rmse:0.001993 \n[78]    train-rmse:0.001914 \n[79]    train-rmse:0.001736 \n[80]    train-rmse:0.001641 \n[81]    train-rmse:0.001493 \n[82]    train-rmse:0.001480 \n[83]    train-rmse:0.001480 \n[84]    train-rmse:0.001480 \n[85]    train-rmse:0.001480 \n[86]    train-rmse:0.001480 \n[87]    train-rmse:0.001480 \n[88]    train-rmse:0.001480 \n[89]    train-rmse:0.001480 \n[90]    train-rmse:0.001480 \n[91]    train-rmse:0.001481 \n[92]    train-rmse:0.001481 \n[93]    train-rmse:0.001481 \n[94]    train-rmse:0.001481 \n[95]    train-rmse:0.001481 \n[96]    train-rmse:0.001481 \n[97]    train-rmse:0.001481 \n[98]    train-rmse:0.001481 \n[99]    train-rmse:0.001481 \n[100]   train-rmse:0.001482 \n\n# Create a new dataset with predictions from the three models\npredictions <- data.frame(\n  Actual = summer_data$Lst,\n  RandomForest_Pred = predict(rf_model, summer_data),\n  SVM_Pred = predict(svm_model, summer_data),\n  XGBoost_Pred = predict(xgb_model, as.matrix(summer_data[, c(\"Avg.Temp.C\", \"Min.Temp.C\")]))\n)\n\n# Create a density plot of the model predictions\nggplot(predictions, aes(x = Actual)) +\n  geom_density(aes(fill = \"Actual\"), alpha = 1) +\n  geom_density(aes(x = RandomForest_Pred, fill = \"RandomForest\"), alpha = 1) +\n  geom_density(aes(x = SVM_Pred, fill = \"SVM\"), alpha = 1) +\n  geom_density(aes(x = XGBoost_Pred, fill = \"XGBoost\"), alpha = 1) +\n  labs(title = \"Density Plot of Model Predictions\",\n       x = \"Predicted Lst\",\n       y = \"Density\") +\n  scale_fill_manual(values = c(\"Actual\" = \"pink\", \n                               \"RandomForest\" = \"green\",\n                               \"SVM\" = \"black\",\n                               \"XGBoost\" = \"yellow\")) +\n  theme_minimal()"
  },
  {
    "objectID": "Machine_Learning.html",
    "href": "Machine_Learning.html",
    "title": "Random forest regression",
    "section": "",
    "text": "In regression analysis, data aggregation was used to simplify and facilitate the process to achieve higher data accuracy. However, machine learning requires many observations and values to train Random Forest and obtain high accuracy. To achieve this, it is crucial to focus on the data frame before aggregation (final_data) and ensure that each LST value is unique, without any duplications that may harm the training quality of the machine. To accomplish this, the following code calculates the average value rows where LST values are duplicated.\n\n\n\n\nlibrary(dplyr)\n\nfinal_data = final_data |>\n  filter(Lst > 20) |>\n  group_by(Lst) |>\n  summarize(\n    Max.Temp.C = mean(Max.Temp.C),\n    Min.Temp.C = mean(Min.Temp.C),\n    Precipitation = mean(Precipitation),\n    Avg.Temp.C = mean(Avg.Temp.C)\n  )\n\n\nCompared to linear regression, the random forest method can identify essential variables based on their predictive power, even if they do not meet the assumptions of linear regression or have high p-values in the original linear model. The VIP package can be used to check which variables are best for the machine learning process and to see each variable’s importance score. In this case, temperature variables have a high importance score and will be used in the random forest model.\n\nlibrary(vip)\nlibrary(randomForest)\nlibrary(dplyr)\n\nvip_rf_model = final_data %>%\nrandomForest(Lst ~ Avg.Temp.C + Min.Temp.C + Max.Temp.C + Precipitation, data = .) %>%\nvip()\n\n#Note vip package works only with %>%\n\nvip_rf_model\n\n\n\n\n\nTo evaluate the performance of a machine learning model, the data was divided into two sets - a training set and a test set. The training set was used to train the model by allowing it to identify patterns and relationships in the data. The test set was then used to assess how accurately the model performs on new data.\nThe ultimate goal of a machine learning model is to make accurate predictions on new data that it has not seen before. However, the training results may reveal if the model becomes too specialized and overfits, resulting in poor performance on new data. To prevent this, the model was run 999 times to get a more accurate estimate of its performance. In each run, the R-squared values of the predictions in relation to the test data were checked.\nIt was found that the Random Forest model had an average R squared value of 0.47, with a maximum value of 0.55. This indicates an improvement in variance explanation of 7% and a 15% improvement relative to the linear model.\n\nlibrary(dplyr)\nlibrary(purrr)\n\n\nrf_function = function(seed, data) {\n  set.seed(seed)  \n  rf_sample = sample(1:nrow(data), 0.75 * nrow(data))\n  train_data = data[rf_sample, ]\n  test_data = data[-rf_sample, ]\n  \nrf_model = randomForest(Lst ~ Min.Temp.C + Avg.Temp.C + Max.Temp.C, data = train_data)\n  \nrf_predictions = predict(rf_model, newdata = test_data)\n  \nmean_observed = mean(test_data$Lst)\ntss = sum((test_data$Lst - mean_observed)^2)\nrss = sum((test_data$Lst - rf_predictions)^2)\nrsquared = 1 - (rss / tss)\n  \nreturn(rsquared)\n}\n\nnum_iterations = 999\n\nresults = 1:num_iterations |>\n  map_dbl(~ rf_function(.x, final_data))\n\nloop_results = data.frame(\n  best_seed = which.max(results),\n  best_rsquared = max(results),\n  min_rsquared = min(results),\n  average_rsquared = mean(results)\n)\n\nloop_results |>\n  glimpse()\n\n#$ best_seed        <int> 337\n#$ best_rsquared    <dbl> 0.5576459\n#$ min_rsquared     <dbl> 0.3624118\n#$ average_rsquared <dbl> 0.469881"
  },
  {
    "objectID": "Machine_Learning_Plots.html",
    "href": "Machine_Learning_Plots.html",
    "title": "Random forest regression plots",
    "section": "",
    "text": "After analyzing the density plot, it becomes evident that the random forest model prediction values fail to predict low Land Surface Temperature (LST) values around the low 20 values. The first predicted value by the random forest is approximately 27 degrees Celsius. The random forest model initially underestimates the actual LST values until around 29 degrees Celsius, where there is a slight overestimation of values that later returns to underestimation. The random forest model doesn’t predict very high LST values around the 50 degrees Celsius mark but instead overestimates the LST values around the 40 degrees Celsius mark.\n\n\n\n\n\n\n\n\n\n\nlibrary(ggplot2)\n\npredictions = data.frame(\n  Actual_Values = test_data$Lst,\n  Prediction_Values = rf_predictions\n)\n\nggplot(predictions, aes(x = Actual_Values)) +\n  geom_density(aes(fill = \"Actual Values\"), alpha = 0.5) +\n  geom_density(aes(x = Prediction_Values, fill = \"Random Forest Values\"), alpha = 0.5) +\n  labs(title = \"Actual Values vs. Random Forest Values\",\n       x = \"Values\",\n       y = \"Density\") +\n  scale_fill_manual(values = c(\"Actual Values\" = \"red\", \"Random Forest Values\" = \"green\")) +\n  guides(fill = guide_legend(title = \"Legend\"))\n\n\n\n\n\nThe second plot shows the error grade of the estimation, with green indicating the lowest error and red indicating the highest. It can be observed that the error is quiet to moderate at the edges that represent the lowest and highest LST values. The highest errors, represented by the red color, are around 40 Celsius, with a high overestimation that can be seen in the first plot.\n\nggplot(predictions, aes(x = Actual_Values, y = Prediction_Values)) +\n  geom_point(aes(color = abs(Actual_Values - Prediction_Values)), size = 3, alpha = 0.7) +  \n  geom_smooth(method = \"lm\", color = \"red\", se = FALSE) +  \n  labs(title = \"Predicted Values vs. Actual Values\",\n       x = \"Actual Values\",\n       y = \"Prediction Values\") +\n  theme_minimal() +\n  scale_color_gradient(low = \"green\", high = \"red\", name = \"Error (abs)\") +\n  geom_text(aes(label = rownames(predictions)), hjust = -0.2, vjust = 0.2, size = 2) + \n  theme(legend.position = \"bottom\") + \n  annotate(\"text\", x = 30, y = 45, label = \"Red Line: Linear Trend Line\", size = 3, color = \"red\")"
  },
  {
    "objectID": "Prophet.html",
    "href": "Prophet.html",
    "title": "Propheat Forcasting Procedure",
    "section": "",
    "text": "Prophet is a powerful tool for forecasting time series data. It employs an additive model that captures non-linear trends, yearly, weekly, and daily seasonality, and holiday effects. It is particularly well-suited for time series data with strong seasonal effects and a significant amount of historical data. With Prophet, you can easily obtain accurate forecasts without needing manual adjustments, even when dealing with messy data. It can easily handle outliers, missing data, and sudden changes in your time series, making it an excellent choice for time series forecasting. (Facebook Open Source, (n.d.))\nFor this seminar research, the Prophet forecasting procedure was chosen due to its simplicity and flexibility in handling data, as well as the noticeable improvement that was achieved in nonlinear regression by using random forest. Despite gaps in the data between years and repeated values for each month from multiple synthetic turf fields, the Prophet model can still accurately predict future LST values.\n\nFor the Prophet forecast procedure to function accurately, it is necessary that the “final_data” data frame is loaded properly, excluding any outliers. Furthermore, a new data frame has been created to include future dates of the summer months in the next decade. Since the training data used for the Prophet forecast procedure spans a decade, it is reasonable to predict the following decade.\n\nlibrary(dplyr)\nlibrary(prophet)\n\nfinal_data = read.csv(\"final_data.csv\")\n\nfinal_data = final_data |>\n  filter(Lst > 20)\n\nfuture_dates_jja = data.frame(ds = as.Date(paste0(rep(2023:2033, each = 1), \"-\", rep(6:8, each = 11), \"-01\"))) |>\n  arrange(ds)\n\nprophet_data = final_data |>\n  select(ds = Date, y = Lst)\n\nprophet_model = prophet(prophet_data)\nsummer_prediction = predict(prophet_model, future_dates_jja)\n\n\nBased on the plot, it is evident that the synthetic turf fields will experience a rise in temperature during the future summer months. The lowest predicted temperature for these fields is 37.34 degrees Celsius, while the highest predicted temperature is 50.35 degrees Celsius.\n\nlibrary(ggplot2)\n\nsummer_prediction$ds = as.Date(summer_prediction$ds)\nlowest_value = summer_prediction |>\n  filter(yhat == min(yhat))\nhighest_value = summer_prediction |>\n  filter(yhat == max(yhat))\n\nggplot(data = summer_prediction, aes(x = ds, y = yhat)) +\n  geom_point(size = 3, color = \"gold\", alpha = 0.7) +\n  geom_smooth(method = \"loess\", se = FALSE, color = \"purple\") +\n  labs(x = \"Date\", y = \"yhat (Forecasted Value)\", \n       title = \"Prophet Forecasted Values with Smooth Line\") +\n  scale_x_date(date_breaks = \"1 year\", date_labels = \"%Y\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  \n  geom_text(data = lowest_value, aes(x = ds, y = min(yhat) - 2, label = paste(\"Lowest:\", round(yhat,2))), hjust = 0) +\n  geom_text(data = highest_value, aes(x = ds, y = min(yhat) - 1, label = paste(\"Highest:\", round(yhat,2))), hjust = 1)\n\n\n\n\n\nThe second plot shows a predicted rise in temperature during the upcoming summer months, which is in line with the trend shown in the first plot. Additionally, the plot displays a range of values in light blue that represent the confidence interval within which the predicted temperatures are expected to fall. According to the Prophet forecast procedure, there is a probability that the synthetic turf fields could reach a high temperature of approximately 50 to 70 degrees Celsius within the confidence interval in the next decade.\n\nplot(prophet_model,summer_prediction)"
  },
  {
    "objectID": "review.html",
    "href": "review.html",
    "title": "Literature Review",
    "section": "",
    "text": "Astroturf, initially lauded for its resilience and year-round playability (Kanaan et al., 2020), has garnered growing concerns over time regarding its impact on local temperatures, climate patterns, and health outcomes (Russo et al., 2022; Gould et al., 2022). As the use of astroturf in various recreational settings continues to rise, it becomes crucial to comprehend its implications for temperature dynamics, public health, and climate change (Russo et al., 2022).\nAstroturf has gained popularity as an alternative to natural grass in sports facilities, with approximately 24.6 million square meters installed in North America in 2020 (Russo et al., 2022). Originally designed to offer a low-maintenance and cost-effective solution for high schools, colleges, and professional stadiums (Jastifer et al., 2018), its appeal has grown due to the development of new synthetic surfaces, including infill systems that mimic natural turfgrass playing quality (Jastifer et al., 2018). However, this increased adoption of astroturf has raised environmental concerns and athlete well-being issues (Gould et al., 2022). Despite advantages such as low maintenance and minimal irrigation needs, these benefits come with caveats, including improper installation leading to drainage issues and uneven surfaces (Jastifer et al., 2018).\nSignificant temperature disparities exist between astroturf and natural turfgrass surfaces. Astroturf can be 35-60°C hotter than natural turfgrass under similar conditions (McNitt et al., 2007). This temperature difference is primarily attributed to the synthetic fibers used in astroturf, which absorb solar radiation and have minimal light reflectance, causing surface temperatures to reach as high as 93°C on hot, sunny days (Thoms et al., 2014; McNitt et al., 2007). Astroturf’s hydrophobic and compact nature exacerbates heat retention, making it resistant to cooling by wind or water, necessitating frequent irrigation (Kanaan et al., 2020). Cooling a 12.2m by 12.2m field from 60°C to 30°C would require a staggering 480,000 liters of water or 3mm to 5mm of water application, bringing astroturf’s water requirements into a comparable range with natural turf, and even exceeding them in some climates (Kanaan et al., 2020).\nThe heat generated on astroturf fields has direct and varied consequences on human health. Prolonged exposure to elevated temperatures significantly increases the risk of heat-related illnesses for players and spectators, ranging from heat exhaustion to potentially life-threatening heat strokes (Bergeron et al., 2011). Reports indicate that the elevated surface temperatures of astroturf fields contribute to a heightened risk of heat-related illnesses, resulting in incidents ranging from heat cramps to heat exhaustion and heat strokes (Bergeron et al., 2011). Additionally, studies suggest a higher incidence of ankle and foot injuries on astroturf compared to natural turf, though conflicting reports exist, with some studies facing scrutiny due to their association with the astroturf industry (Kanaan et al., 2020). Concerning respiratory diseases, the synthetic materials used in astroturf, especially under high temperatures, can release harmful chemicals, including carcinogenic polycyclic aromatic hydrocarbons (PAHs), phthalates, and per- and poly-fluoroalkyl substances (PFAS), which are neurotoxicants, mutagens, and endocrine disruptors (Murphy & Warner, 2022). Astroturf also significantly impacts freshwater ecotoxicity throughout its use and maintenance more than natural turf (Russo et al., 2022).\nIn addressing land heating issues like those associated with astroturf, conducting large-scale research and monitoring across extensive areas is often necessary. One standard method for this purpose is satellite imagery, which provides comprehensive data on Land Surface Temperatures (LST) across vast regions. However, utilizing this data for LST analysis presents challenges in data consistency and computational demands. To address these challenges, Google Earth Engine (GEE) has emerged as a valuable platform, leveraging Google’s computational resources for remote sensing data analysis. GEE enables users to analyze data directly within the platform, eliminating the need for local data storage (Avdan & Jovanovska, 2016; Ermida et al., 2020).\nFor conducting this type of research, Landsat 8’s Band 10, dedicated to thermal infrared sensing, can be a key component in LST estimation algorithms, offering valuable insights into thermal conditions and values in imagery. These algorithms have shown potential in estimating LST with reasonable accuracy compared to near-surface air temperature measurements. However, it’s essential to recognize that LST and near-surface air temperature can differ due to variations in measurement height. Moreover, Landsat 8’s spatial resolution, while suitable for many applications, has limitations in capturing fine-scale temperature variations. Nevertheless, Landsat 8 remains a valuable and accurate tool for efficiently assessing Land Surface Temperatures over a wide range of land areas (Avdan & Jovanovska, 2016; Ermida et al., 2020).\nIn conclusion, this literature review delves into the intricate relationship between astroturf, temperature, health, and climate. Astroturf, often used as a substitute for natural grass in sports facilities and gardens, poses various environmental and health risks. It can become significantly hotter than natural grass, necessitating more water for cooling and potentially releasing harmful chemicals. Prolonged exposure to elevated temperatures on astroturf can lead to heat-related illnesses and an increased risk of injuries. The use of remote sensing platforms, such as Google Earth Engine and Landsat 8 imagery, has proven effective in monitoring land surface temperatures and assessing the heat impact of astroturf."
  },
  {
    "objectID": "conclusions.html",
    "href": "conclusions.html",
    "title": "Conclusions",
    "section": "",
    "text": "Additionally, more advanced machine learning methods techniques may offer enhanced predictive accuracy. Also, expanding the research area outside New York could lead to improved conclusions due to the diversity of climate patterns. In addition, the seminar presented research on predicting astroturf temperature dynamics using the Prophet Forecasting Procedure by Facebook. The model predicts an increase in land surface temperature (LST) during summer months over the next decade. This rise could lead to increased environmental damage and health problems related to astroturf."
  },
  {
    "objectID": "abstract.html",
    "href": "abstract.html",
    "title": "Abstract",
    "section": "",
    "text": "This seminar research examines how climate factors affect the Land Surface Temperature (LST) in synthetic turf fields in New York during the summer months of June, July, and August. The research revealed a significant positive correlation between the LST and climate factors, although the correlation is low to moderate. Additionally, the research found that a linear model can explain 40.6% of the LST variance. However, the Random Forest model is more effective in predicting LST and can explain 47% of the variance using climate factors. Lastly, the Prophet Forecasting Procedure was used to forecast future LST values, indicating that synthetic turf fields in New York will experience an upward trend in LST over the next decade."
  },
  {
    "objectID": "discussion.html",
    "href": "discussion.html",
    "title": "Discussion",
    "section": "",
    "text": "It is worth noting that the other correlation tests performed support the initial hypothesis that higher temperatures would coincide with elevated LST values. However, it should be emphasized that the level of correlation observed was only low to medium, which indicates only partial support for the hypothesis. With the results of the correlation tests, a linear model was developed to explain the variations in LST through temperature variables, and the results showed that approximately 40.6% of the variance in LST could be explained by the average and minimum temperatures. The average temperature contributes positively, and the minimum temperature contributes a negative effect. However, it is interesting to note that the maximum mean temperature was insignificant in the linear regression. A reasonable hypothesis from the literature review is that the synthetic fields receive a lot of irrigation, which prevents them from heating up beyond what is desired. On the hotter days of the summer months, continuous and intensive irrigation may lower the temperature of the synthetic fields to lower values and, by that, interrupt a possible linear relationship between LST and maximum mean temperature.\nThe Linear regression model accuracy is limited due to the multi-correlation of predictive variables and lack of homoscedasticity. To address this, a machine learning model was used to enhance predictive accuracy. The Random Forest machine learning model was found to be a useful model, surpassing the linear regression model with a mean R-squared value of 0.47. This improvement indicates that the Random Forest model can explain 7% more variance in LST, providing a more accurate prediction. However, it is important to note that the Random Forest model has performed poorly in predicting extremely low or high LST values. It should be taken into consideration when predicting LST in colder and warmer periods during the summer months.\nIn order to improve the analysis of the LST values of the synthetic turf fields in New York, a forward-looking methodology was employed. The Prophet forecasting procedure was used for predicting future LST values for the summer months of the next decade (2023-2033). The Prophet forecasting procedure is capable of dealing with time series data that exhibit seasonality and is also able to handle flexible and versatile types of data, making it a convenient tool to utilize and configure for prediction. The Prophet model predicts that LST values will increase during the summer months in the next decade. The predictions show a wide range of temperature scenarios, with the lowest estimated temperature being 37.34 degrees Celsius and the highest being 50.35 degrees Celsius. The model provides a confidence interval that indicates the possibility of LST exceeding the 50 to 70 degrees Celsius range over the next decade. While it is likely that the LST will not exceed 70 degrees due to intensive irrigation, as it is commonly practiced today, the synthetic fields will still experience an increase in temperature, according to the forecast. This will increase water and energy consumption to keep the synthetic grass fields cool, which could cause environmental damage. In addition to all these results, it is important to note that the data was collected from weather stations near the synthetic fields and at a certain distance that could affect the results. It is also likely to assume that various gases affect temperature near the airports where the weather stations are located.\nThe data visualization found that Land Surface Temperature data exhibits temperature patterns yearly and monthly. These patterns show cooler and warmer years, with specific months, such as July, having the highest temperatures. This wide range of values could indicate that certain fields may have been under-maintained or lacked proper irrigation systems during some years in the research, which could explain the variability in temperature values.\nFinally, according to the hypothesis, the seminar research created two moderate prediction models of the future Land Surface Temperature of synthetic turf fields during the summer months using significant climate factors."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Bergeron, M. F., DiLaura Devore, C., Rice, S. G., & Council on Sports Medicine and Fitness and Council on School Health. (2011). Climatic heat stress and exercising children and adolescents. Pediatrics, 128(3), e741-e747.\nBox, G. E. (1976). Science and statistics. Journal of the American Statistical Association, 71(356), 791-799.\nGould, H. P., Lostetter, S. J., Samuelson, E. R., & Guyton, G. P. (2022). Lower extremity injury rates on artificial turf versus natural grass playing surfaces: a systematic review. The American Journal of Sports Medicine, 51(6), 1615-1621.\nJastifer, J. R., McNitt, A. S., Mack, C. D., Kent, R. W., McCullough, K. A., Coughlin, M. J., & Anderson, R. B. (2019). Synthetic turf: history, design, maintenance, and athlete safety. Sports Health, 11(1), 84-90.\nKanaan, A., Sevostianova, E., Leinauer, B., & Sevostianov, I. (2020). Water Requirements for Cooling Artificial Turf. Journal of Irrigation and Drainage Engineering, 146(10), 05020004.\nLandsat Missions. (2023, July 21). Landsat 8-9 OLI/TIRS Collection 2 Level 2 Data Format Control Book. USGS. Retrieved September 15, 2023, from https://www.usgs.gov/media/files/landsat-8-9-olitirs-collection-2-level-2-data-format-control-book\nMcNitt, A. S., Petrunak, D. M., & Serensits, T. J. (2007, June). Temperature amelioration of synthetic turf surfaces through irrigation. In II International Conference on Turfgrass Science and Management for Sports Fields 783, 573-582.\nMurphy, M., & Warner, G. R. (2022). Health impacts of artificial turf: Toxicity studies, challenges, and future directions. Environmental Pollution, 119841.\nRusso, C., Cappelletti, G. M., & Nicoletti, G. M. (2022). The product environmental footprint approach to compare the environmental performances of artificial and natural turf. Environmental Impact Assessment Review, 95, 106800.\nTaylor, S. J., & Letham, B. (2018). Forecasting at scale. The American Statistician, 72(1), 37-45.\nThoms, A. W., Brosnan, J. T., Zidek, J. M., & Sorochan, J. C. (2014). Models for predicting surface temperatures on synthetic turf playing surfaces. Procedia Engineering, 72, 895-900.\nUSGS. (n.d.). Landsat 8. https://www.usgs.gov/landsat-missions/landsat-8\nWang, T., Shi, J., Ma, Y., Husi, L., Comyn‐Platt, E., Ji, D., ... & Xiong, C. (2019). Recovering land surface temperature under cloudy skies considering the solar‐cloud‐satellite geometry: Application to MODIS and Landsat‐8 data. Journal of Geophysical Research: Atmospheres, 124(6), 3401-3416.\nFacebook Open Source. (n.d.). Prophet. Prophet. Retrieved September 1, 2023, from https://facebook.github.io/prophet/‏\nData Sources:\nEarth Engine Data Catalog. (n.d.). USGS Landsat 8 level 2, collection 2, tier 1. https://developers.google.com/earth-engine/datasets/catalog/LANDSAT_LC08_C02_T1_L2\nNational Centers for Environmental Information. (n.d.). Global historical climatology network daily (GHCNd). https://www.ncei.noaa.gov/products/land-based-station/global-historical-climatology-network-daily\nNational Weather Service. (n.d.). Climate. https://www.weather.gov/wrh/Climate?wfo=okx\nNew York City Department of Parks & Recreation. (n.d.). Synthetic Turf Lead Results. Wayback Machine. web.archive.org/web/20180203033627/https://www.nycgovparks.org/news/reports/synthetic-turf-tests"
  }
]